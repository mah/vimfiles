# Snippets taken from Microsoft's CodeContracts project, some have been dropped
# (crsn, cesn, cre, cren, cresn, cintf, crr, co)
snippet cr
	requires(${1:true})
	${2}

snippet ce
	ensures(${1:true})
	${2}

snippet ci
	invariant(${1:true})
	${2}

snippet crn
	requires(${1:/* pointer */} != NULL)

snippet cen
	requires(result != NULL)

snippet cca
	assert(${1:true});
	${2}

snippet cam
	assume(${1:false});
	${2}

# Additional VCC snippets
snippet cm
	maintains(${1:true})
	${2}

snippet cw
	writes(${1:/* pointer */})
	${2}

snippet cg
	spec(${1:/* ghost */}
	${2})

snippet crf
	requires(forall(${1:/* variables */}; ${2:/* guard */}; ${3:/* expression */}))
	${4}

snippet cre
	requires(exists(${1:/* variables */}; ${2:/* guard */}; ${3:/* expression */}))
	${4}

snippet cef
	ensures(forall(${1:/* variables */}; ${2:/* guard */}; ${3:/* expression */}))
	${4}

snippet cee
	ensures(exists(${1:/* variables */}; ${2:/* guard */}; ${3:/* expression */}))
	${4}

snippet cmf
	maintains(forall(${1:/* variables */}; ${2:/* guard */}; ${3:/* expression */}))
	${4}

snippet cme
	maintains(exists(${1:/* variables */}; ${2:/* guard */}; ${3:/* expression */}))
	${4}

snippet ccaf
	assert(forall(${1:/* variables */}; ${2:/* guard */}; ${3:/* expression */}));
	${4}

snippet ccae
	assert(exists(${1:/* variables */}; ${2:/* guard */}; ${3:/* expression */}));
	${4}

snippet camf
	assume(forall(${1:/* variables */}; ${2:/* guard */}; ${3:/* expression */}));
	${4}

snippet came
	assume(exists(${1:/* variables */}; ${2:/* guard */}; ${3:/* expression */}));
	${4}

snippet vcc #include "vcc.h"
	#include <vcc.h>

snippet vcc vcc(dynamic_owns)
	vcc(dynamic_owns)

snippet vcc vcc(volatile_owns)
	vcc(volatile_owns)

snippet vcc vcc(claimable)
	vcc(claimable)
